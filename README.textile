h1. laut.fm Javascript API Tools

Javascript-Bibliothek zur Benutzung der "laut.fm API":http://api.laut.fm.

Achtung: Beta-Software. Bei Problemen bitte "Issue" öffnen oder im "laut.fm Mixxt Forum melden":http://laut.fm.mixxt.de/.

h2. Features

* Sämtliche API-Call gehen über CORS ("Cross Origin Resource Sharing":http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing). Die Unterschiede zwischen den Internet-Explorern und modernen Browsern gleichen die laut.fm API Tools aus.
* Uhrzeiten werden in Javascript Time-Objekte konvertiert.
* Einzel-Stations-Infos und Song-Infos können automatisch wiederholt abgerufen werden.
* Uhrzeit-Unterschiede zwischen Server und Client werden erkannt und die nötigen Offsets automatisch eingerechnet.
* Ein UI-loser "flowplayer":http://flowplayer.org wird in einem Player-Objekt bereitgestellt, gesteuert über eine Javascript-Schnittstelle. Es können Songwechsel-Callbacks angegeben werden.
* Keine weiteren Abhängigkeiten

h2. Einschränkungen

* CORS-Requests werden unterstützt durch alle modernen Browser außer Opera. Soweit abzusehen bekommt Opera "CORS-Support ab Version 12":http://my.opera.com/core/blog/2011/10/28/cors-goes-mainline.

h2. Über den Javascript-Wrapper bereitgestellt API-Resourcen

@CALLBACK@ ist die Funktion, mit der jeweils die Antwort verarbeitet werden soll.


h3. Allgmeine Resourcen

<pre><code>laut.fm.time(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/time.html ("API URL":http://api.laut.fm/time)

(Der laut.fm API time Dienst dient im Wesentlichen dazu, den Zeitunterschied zwischen Client und Server zu bestimmen.)

<pre><code>laut.fm.server_status(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/server_status.html ("API URL":http://api.laut.fm/server_status)

<pre><code>laut.fm.letters(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/letters.html ("API URL":http://api.laut.fm/letters)

<pre><code>laut.fm.genres(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/genres.html ("API URL":http://api.laut.fm/genres)

<pre><code>laut.fm.station_names(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station_names.html ("API URL":http://api.laut.fm/station_names)


h3. Stations-Auflistungen

Alle Stations-Auflistungen funktionieren mit Optionen zur Paginierung:

@OPTIONS@: @limit@ und/oder @offset@

<pre><code>laut.fm.stations.all(CALLBACK[, OPTIONS])</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/stations.all.html ("API URL":http://api.laut.fm/stations) (Achtung: Dauert lange in Chrome, zu lange in Firefox)
* "Demo mit limit":http://lautde.github.com/lautfm_js_tools/stations.all_limit10.html ("API URL":http://api.laut.fm/stations?limit=10)
* "Demo mit limit und offset":http://lautde.github.com/lautfm_js_tools/stations.all_limit10_offset25.html ("API URL":http://api.laut.fm/stations?limit=10&offset=25)

<pre><code>laut.fm.stations.letter(LETTER, CALLBACK[, OPTIONS])</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/stations.letter_b.html ("API URL":http://api.laut.fm/stations/letter/b)
* "Demo mit limit":http://lautde.github.com/lautfm_js_tools/stations.letter_b_limit10.html ("API URL":http://api.laut.fm/stations/letter/b?limit=10)
* "Demo mit limit und offset":http://lautde.github.com/lautfm_js_tools/stations.letter_b_limit10_offset5.html ("API URL":http://api.laut.fm/stations/letter/b?limit=10&offset=5)
* "Demo mit Zahl":http://lautde.github.com/lautfm_js_tools/stations.letter_hash.html ("API URL":http://api.laut.fm/stations/numbers)

<pre><code>laut.fm.stations.numbers(CALLBACK[, OPTIONS])</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/stations.numbers.html ("API URL":http://api.laut.fm/stations/numbers)

<pre><code>laut.fm.stations.genre(GENRE, CALLBACK[, OPTIONS])</code></pre>

@GENRE@ muss eins der Genres von @laut.fm.genres()@ sein.

* "Demo":http://lautde.github.com/lautfm_js_tools/stations.genre_ROCK.html ("API URL":http://api.laut.fm/stations/genre/Rock) (Achtung: Dauert lange in Chrome, zu lange in Firefox)
* "Demo mit limit":http://lautde.github.com/lautfm_js_tools/stations.genre_ROCK_limit10.html ("API URL":http://api.laut.fm/stations/genre/Rock?limit=10)
* "Demo mit limit und offset":http://lautde.github.com/lautfm_js_tools/stations.genre_ROCK_limit10_offset25.html ("API URL":http://api.laut.fm/stations/genre/Rock?limit=10&offset=25)

<pre><code>laut.fm.stations.genre(NAMES, CALLBACK)</code></pre>

@NAMES@ müssen Sendernamen sein, als String Komma-separiert oder als Array.

* "Demo":http://lautde.github.com/lautfm_js_tools/stations.names.html ("API URL":http://api.laut.fm/stations/eins,deepgroove,best_of_80s)


h3. Einzel-Stations-Infos

<pre><code>laut.fm.station('NAME').info(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.info.html ("API URL":http://api.laut.fm/station/eins)

<pre><code>laut.fm.station(NAME).current_song(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.current_song.html ("API URL":http://api.laut.fm/station/eins/current_song)

<pre><code>laut.fm.station(NAME).last_songs(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.last_songs.html ("API URL":http://api.laut.fm/station/eins/last_songs)

<pre><code>laut.fm.station(NAME).playlists(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.playlists.html ("API URL":http://api.laut.fm/station/disco/playlists)

<pre><code>laut.fm.station(NAME).schedule(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.schedule.html ("API URL":http://api.laut.fm/station/disco/schedule)

<pre><code>laut.fm.station(NAME).network(CALLBACK)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.network.html ("API URL":http://api.laut.fm/station/deepgroove/network)


h3. Einzel-Stations-Infos mit Auto-Update

Wird den Funktionen @info@, @current_song@ oder @last_songs@ als zweiter parameter ein @true@ übergeben, wird der API-Call und der zugehörige automatisch wiederholt:

<pre><code>laut.fm.station(NAME).current_song(CALLBACK, true)</code></pre>

* "Demo":http://lautde.github.com/lautfm_js_tools/station.current_song_auto.html ("API URL":http://api.laut.fm/station/maxeinsdreissig/current_song)

Wechselt man zum Beispiel die current_song-Anzeige zwischen mehreren Stationen, kann man das Autoupdate wieder canceln:

<pre><code>var watchedStation = laut.fm.station(NAME1).current_song(CALLBACK, true);
  // ...
watchedStation.unwatch();
var watchedStation = laut.fm.station(NAME2).current_song(CALLBACK, true);
</code></pre>


h3. Die API-Suche

TODO: Doku

* laut.fm.search.stations(QUERY)

h3. Der Player

TODO: Doku

* laut.fm.player
